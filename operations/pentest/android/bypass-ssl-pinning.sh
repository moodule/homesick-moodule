#!/bin/bash

TARGET=com.getpure.pure

# Works inside an emulator
# Requires:
#   - frida
#   - adb (android-sdk)
#   - genymotion
#   - [burp or zaproxy]

# The first steps are documented in separate scripts

# Create a virtual android image

# You may have to locate genymotion's adb
ps auxf | grep 'adb'

# Install the target app (may require arm translation)

# Proxy the traffic through burp / zaproxy

# Install burp / zaproxy certificate
# The location must be the same as the one in the frida script
adb push burpca-cert.der /data/local/tmp/cert-der.crt

# Download frida server
# https://github.com/frida/frida/releases
# To find out the arch version of the device:
adb shell getprop ro.product.cpu.abi

# Push frida-server on the virtual android
unxz frida-server.xz
adb push frida-server /data/local/tmp/
adb shell "chmod 755 /data/local/tmp/frida-server"

# Launch the server
adb shell "/data/local/tmp/frida-server &"

# Verify the setup
adb devices -l
frida-ps -U

# You should see your target app in the listing from the previous command

# Fire up the add-on
frida -U \
  --codeshare pcipolloni/universal-android-ssl-pinning-bypass-with-frida \
  -f "$TARGET"

# Or with a local script
frida -U -l /path/to/fridascript.js --no-paus -f "$TARGET"
